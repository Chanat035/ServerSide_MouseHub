async function loadProducts() {
  console.log("üõí ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤...");
  const tbody = document.getElementById("productBody");

  try {
    const res = await fetch("/api/product");
    const products = await res.json();

    if (!Array.isArray(products)) {
      tbody.innerHTML =
        "<tr><td colspan='9' class='text-center text-danger'>‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</td></tr>";
      return;
    }

    if (products.length === 0) {
      tbody.innerHTML =
        "<tr><td colspan='9' class='text-center text-muted'>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</td></tr>";
      return;
    }

    tbody.innerHTML = products
      .map((p) => {
        const shortDesc =
          p.description && p.description.length > 20
            ? p.description.slice(0, 20) + "..."
            : p.description || "-";

        const isDeleted = !!p.isDeleted;
        const deleteIcon = isDeleted
          ? `<i class="bi bi-check-lg text-success fs-5" style="cursor:pointer"
                onclick='openModal("restoreProduct", ${JSON.stringify(p).replace(
                  /"/g,
                  "&quot;"
                )})'></i>`
          : `<i class="bi bi-x-lg text-danger fs-5" style="cursor:pointer"
                onclick='openModal("deleteProduct", ${JSON.stringify(p).replace(
                  /"/g,
                  "&quot;"
                )})'></i>`;

        return `
        <tr>
          <td>${p.name}</td>
          <td>${p.price}</td>
          <td>${p.quantity}</td>
          <td>${p.brand}</td>
          <td>${p.category || "-"}</td>
          <td>${shortDesc}</td>
          <td><img src="${p.imgUrl || ""}" alt="img" width="50" height="50" style="object-fit:cover;border-radius:6px;"></td>
          <td>${deleteIcon}</td>
          <td>
            <i class="bi bi-pencil text-warning fs-5" style="cursor:pointer"
              onclick='openModal("editProduct", ${JSON.stringify(p).replace(
                /"/g,
                "&quot;"
              )})'></i>
          </td>
        </tr>
      `;
      })
      .join("");
  } catch (err) {
    console.error("‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err);
    tbody.innerHTML =
      "<tr><td colspan='9' class='text-center text-danger'>‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</td></tr>";
  }
}

// ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
async function createProduct(formData) {
  try {
    const res = await fetch("/api/create", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(formData),
    });
    const result = await res.json();
    if (res.ok) {
      alert("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");
      closeModal();
      loadProducts();
    } else {
      alert("‚ùå ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " + (result.message || "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏"));
    }
  } catch (err) {
    console.error("‚ùå createProduct error:", err);
    alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤");
  }
}

// ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
async function updateProduct(formData) {
  try {
    const res = await fetch("/api/update", {
      method: "PATCH",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(formData),
    });
    const result = await res.json();
    if (res.ok) {
      alert("‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");
      closeModal();
      loadProducts();
    } else {
      alert("‚ùå ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " + (result.message || "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏"));
    }
  } catch (err) {
    console.error("‚ùå updateProduct error:", err);
    alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤");
  }
}

// ‚úÖ ‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
async function deleteProduct(id) {
  try {
    const res = await fetch("/api/product", {
      method: "DELETE",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ id, confirmMessage: "Confirm" }),
    });
    const result = await res.json();
    if (res.ok) {
      alert("üóëÔ∏è ‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");
      closeModal();
      loadProducts();
    } else {
      alert("‚ùå ‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " + (result.message || "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏"));
    }
  } catch (err) {
    console.error("‚ùå deleteProduct error:", err);
    alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤");
  }
}

// ‚úÖ Restore ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
async function restoreProduct(id) {
  try {
    const res = await fetch("/api/restore", {
      method: "PATCH",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ id }),
    });
    const result = await res.json();
    if (res.ok) {
      alert("‚ôªÔ∏è Restore ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");
      closeModal();
      loadProducts();
    } else {
      alert("‚ùå Restore ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " + (result.message || "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏"));
    }
  } catch (err) {
    console.error("‚ùå restoreProduct error:", err);
    alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ restore ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤");
  }
}

loadProducts();
