<style>
  /* üåô Minimal Black-Yellow Theme */

/* ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á Modal */
.modal-content {
  background-color: #121212; /* ‡∏î‡∏≥‡πÄ‡∏Ç‡πâ‡∏° */
  color: #f1f1f1; /* ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÄ‡∏ó‡∏≤‡∏≠‡πà‡∏≠‡∏ô */
  border: 1px solid #2a2a2a;
  box-shadow: 0 0 20px rgba(255, 230, 0, 0.1);
}

/* ‡∏´‡∏±‡∏ß Modal */
.modal-header {
  background-color: #1a1a1a;
}

.modal-title {
  color: #ffcc00; /* ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á‡∏™‡∏î */
}

/* ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î */
.btn-close {
  filter: invert(1) grayscale(100%) brightness(200%);
}

/* ‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏•‡∏∞ input */
.form-control {
  background-color: #1f1f1f;
  color: #f1f1f1;
  border: 1px solid #2d2d2d;
  transition: all 0.3s ease;
}

.form-control:focus {
  border-color: #ffcc00;
  box-shadow: 0 0 6px rgba(255, 204, 0, 0.5);
  background-color: #262626;
  color: #fff;
}

/* invalid field */
.is-invalid {
  border-color: #ff4444 !important;
  box-shadow: 0 0 6px rgba(255, 68, 68, 0.4);
}

.invalid-feedback {
  color: #ff6666;
  font-size: 0.85rem;
}

/* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å */
.btn-primary {
  background-color: #ffcc00;
  color: #000;
  border: none;
  font-weight: 600;
  transition: all 0.3s ease;
}

.btn-primary:hover {
  background-color: #e6b800;
  transform: translateY(-1px);
}

/* ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö */
a.text-primary {
  color: #ffcc00 !important;
  text-decoration: none;
  transition: color 0.3s ease;
}

a.text-primary:hover {
  color: #ffe666 !important;
  text-decoration: underline;
}

/* ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡πâ‡∏≤‡∏¢ Modal */
.modal-footer small {
  color: #bbb;
}

/* Alert ‡πÅ‡∏™‡∏î‡∏á error */
.alert-danger {
  background-color: #2b0000;
  color: #ff6666;
  border: 1px solid #ff3333;
  border-radius: 10px;
}

/* ‡∏õ‡∏£‡∏±‡∏ö spacing ‡πÉ‡∏´‡πâ‡∏î‡∏π‡πÇ‡∏õ‡∏£ */
.modal-body .form-label {
  font-weight: 500;
  color: #ffcc00;
}

.modal-body {
  background-color: #121212;
}

.modal-footer {
  background-color: #1a1a1a;
}

</style>

<!-- Register Modal -->
<div class="modal fade" id="registerModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content shadow-lg rounded-4 border-0">

      <!-- ‡∏´‡∏±‡∏ß modal -->
      <div class="modal-header border-0">
        <h5 class="modal-title fw-bold text-primary">‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="‡∏õ‡∏¥‡∏î"></button>
      </div>

      <!-- ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ modal -->
      <div class="modal-body px-4">
        <% if (typeof registerError !== 'undefined') { %>
          <div class="alert alert-danger">
            <%= registerError %>
          </div>
        <% } %>

        <form id="registerForm" action="/api/register" method="POST" novalidate>
          <div class="mb-3">
            <label class="form-label">‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</label>
            <input type="text" name="name" class="form-control rounded-pill shadow-sm" placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ" required>
            <div class="invalid-feedback"></div>
          </div>

          <div class="mb-3">
            <label class="form-label">‡∏≠‡∏µ‡πÄ‡∏°‡∏•</label>
            <input type="email" name="email" class="form-control rounded-pill shadow-sm" placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•" required>
            <div class="invalid-feedback"></div>
          </div>

          <div class="mb-3">
            <label class="form-label">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£</label>
            <input type="text" name="phone" class="form-control rounded-pill shadow-sm" placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£" required>
            <div class="invalid-feedback"></div>
          </div>

          <div class="mb-3">
            <label class="form-label">‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà</label>
            <input type="text" name="address" class="form-control rounded-pill shadow-sm" placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà" required>
            <div class="invalid-feedback"></div>
          </div>

          <div class="mb-3">
            <label class="form-label">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</label>
            <input type="password" name="password" class="form-control rounded-pill shadow-sm" placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô" required>
            <div class="invalid-feedback"></div>
          </div>

          <div class="mb-4">
            <label class="form-label">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</label>
            <input type="password" name="confirmPassword" class="form-control rounded-pill shadow-sm" placeholder="‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô" required>
            <div class="invalid-feedback"></div>
          </div>

          <button type="submit" class="btn btn-primary w-100 rounded-pill py-2 fw-bold shadow-sm">‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</button>
        </form>
      </div>

      <!-- ‡∏ó‡πâ‡∏≤‡∏¢ modal -->
      <div class="modal-footer d-flex justify-content-center border-0">
        <small class="text-muted">
          ‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß?
          <a href="#" class="text-primary fw-bold" data-bs-toggle="modal" data-bs-target="#loginModal" data-bs-dismiss="modal">
            ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
          </a>
        </small>
      </div>
    </div>
  </div>
</div>

<!-- Validation Script -->
<script>
document.addEventListener("DOMContentLoaded", () => {
  const form = document.getElementById("registerForm");

  form.addEventListener("submit", function(e) {
    let isValid = true;

    // Get values
    const name = form.name.value.trim();
    const email = form.email.value.trim();
    const phone = form.phone.value.trim();
    const address = form.address.value.trim();
    const password = form.password.value;
    const confirmPassword = form.confirmPassword.value;

    // Reset feedback
    form.querySelectorAll(".invalid-feedback").forEach(fb => fb.textContent = "");
    form.querySelectorAll("input").forEach(input => input.classList.remove("is-invalid"));

    // Validation rules
    if (name.length < 3) {
      form.name.classList.add("is-invalid");
      form.name.nextElementSibling.textContent = "Username must have at least 3 characters";
      isValid = false;
    }

    const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailPattern.test(email)) {
      form.email.classList.add("is-invalid");
      form.email.nextElementSibling.textContent = "Invalid email address";
      isValid = false;
    }

    if (phone.length < 10) {
      form.phone.classList.add("is-invalid");
      form.phone.nextElementSibling.textContent = "Phone number must have at least 10 characters";
      isValid = false;
    }

    if (address.length < 5) {
      form.address.classList.add("is-invalid");
      form.address.nextElementSibling.textContent = "Address must have at least 5 characters";
      isValid = false;
    }

    if (password.length < 6) {
      form.password.classList.add("is-invalid");
      form.password.nextElementSibling.textContent = "Password must have at least 6 characters";
      isValid = false;
    }

    if (password !== confirmPassword) {
      form.confirmPassword.classList.add("is-invalid");
      form.confirmPassword.nextElementSibling.textContent = "Passwords do not match";
      isValid = false;
    }

    if (!isValid) e.preventDefault();
  });
});
</script>
